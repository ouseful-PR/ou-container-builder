name: Tests

on:
  push:
    branches: [ default ]
  pull_request:
    branches: [ default ]

jobs:
  tests:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 2
      matrix:
        python-version: ['3.8', '3.9']

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        pip3 install tox

    - name: Run Tests
      run: |
        mkdir tmp
        tox -e ${{matrix.python-version}}

  doc_tests:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install python3-venv
        sudo pip3 install poetry
        poetry install

    - name: Test Docs Build
      run: |
        cd docs
        poetry run make html

  demo_tests:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install python3-venv
        sudo pip3 install poetry
        poetry install

    - name: Create demo Dockerfiles
      run: |
        poetry run ou-container-builder --context demos/jupyter-notebook --no-build
        poetry run ou-container-builder --context demos/openrefine --no-build

    - name: Build the Jupyter Notebook demo
      uses: docker/build-push-action@v2
      with:
        push: false
        context: demos/jupyter-notebook

    - name: Build the Openrefine demo
      uses: docker/build-push-action@v2
      with:
        push: false
        context: demos/openrefine
